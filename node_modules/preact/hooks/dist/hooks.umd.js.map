{"version":3,"file":"hooks.umd.js","sources":["../src/index.js"],"sourcesContent":["import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!hookState._component._hasScuFromHooks) {\n\t\t\thookState._component.__hooks._hasScuFromHooks = true;\n\t\t\tconst prevScu = hookState._component.shouldComponentUpdate;\n\t\t\thookState._component.shouldComponentUpdate = (p, s, c) => {\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu(p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tconst shouldSkipUpdating = stateHooks.every(hookItem => {\n\t\t\t\t\tif (!hookItem._nextValue) return true;\n\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\treturn currentValue === hookItem._value[0];\n\t\t\t\t});\n\n\t\t\t\tif (!shouldSkipUpdating) {\n\t\t\t\t\treturn prevScu ? prevScu(p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// When all set nextValues are equal to their original value\n\t\t\t\t// we bail out of updating.\n\t\t\t\t// Thinking: would this be dangerous with a batch of updates where\n\t\t\t\t// Comp1 updates --> Comp2 updated in same batch twice but has same eventual state --> this leads to us\n\t\t\t\t// not diving into Comp3\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n"],"names":["currentIndex","currentComponent","previousComponent","prevRaf","currentHook","afterPaintEffects","EMPTY","oldBeforeDiff","options","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","getHookState","index","type","hooks","length","push","useState","initialState","useReducer","invokeOrReturn","reducer","init","hookState","_reducer","undefined","action","currentValue","nextValue","setState","_hasScuFromHooks","prevScu","shouldComponentUpdate","p","s","c","stateHooks","filter","x","every","hookItem","useLayoutEffect","callback","args","state","argsChanged","_pendingArgs","useMemo","factory","flushAfterPaintEffects","component","shift","forEach","invokeCleanup","invokeEffect","e","vnode","requestAnimationFrame","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","commitQueue","some","cb","hasErrored","hook","comp","cleanup","oldArgs","newArgs","arg","f","initialValue","current","ref","createHandle","concat","context","provider","sub","props","value","formatter","useDebugValue","errState","componentDidCatch","err"],"mappings":"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"}